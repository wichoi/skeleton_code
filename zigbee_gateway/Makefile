# This file was generated by Simplicity Studio from the following template:
#   protocol/zigbee/tool/appbuilder/host-unix-Makefile-afv2
# Please do not edit it directly.

# This Makefile defines how to build a unix host application connected to an
# Ember NCP EZSP device.  This also works for Windows machines running
# Cygwin.

# Variables

# If using a different compiler than GCC, you can create a makefile
# that overrides the following variables.  
#   COMPILER - Compiler binary path
#   LINKER - Linker binary path
#   ARCHIVE - Optional archive tool, only necessary for building a library.
#     Must also set GENERATE_LIBRARY := 1 in your makefile.
#   COMPILER_INCLUDES - Any additional compiler includes each prefixed with -I
#   COMPILER_DEFINES - Any additional compiler defines each prefixed with -D
#   COMPILER_FLAGS - The set of compiler flags (not including dependencies)
#   LINKER_FLAGS - The set of linker flags
#   ARCHIVE_FLAGS - The set of archive tool flags.
#   DEPENDENCY_FLAGS - The set of dependency generation flags used to generate
#     dependencies at the same time compilation is executed.
#   DEPENDENCY_POST_PROCESS - An optional post processing step for massaging
#     generated dependencies.  Only necessary when using a compiler on the 
#     non-native platform (e.g. Windows compiler on Linux)
#   PLATFORM_HEADER_FILE - The header file defining the basic int8u, int32u,
#     and other typedefs and platform elements.
#   ARCHIVE_EXTENSION - The file extension for archives if not using the standard
#     .a file extension.
#
# Then pass the makefile to this one on the command line with:
#   "make -C app/builder/Z3GatewayHost INCLUDE_MAKEFILE=my-custom.mak"
#   or 
#   "cd app/builder/Z3GatewayHost; make INCLUDE_MAKEFILE=my-custom.mak"
#

ifdef INCLUDE_MAKEFILE
  include $(INCLUDE_MAKEFILE)
endif  

.SUFFIXES:

COMPILER ?= gcc
LINKER   ?= gcc
ARCHIVE  ?= ar
STD      ?= gnu99

ARCHIVE_EXTENSION ?= .a

CC = $(COMPILER)
LD = $(LINKER)
SHELL = /bin/sh
removeSpaces = $(subst \ ,+SL5C20+,$1)
restoreSpaces = $(subst +SL5C20+,\ ,$1)

ifneq ($(CURDIR),$(shell dirname '$(abspath $(lastword $(MAKEFILE_LIST)))'))
$(error This makefile should only be invoked under its current directory ($(shell dirname '$(abspath $(lastword $(MAKEFILE_LIST)))')))
endif

COMPILER_INCLUDES ?= 

INCLUDES= -I./ \
  $(COMPILER_INCLUDES) \
  -I./v3.0 \
  -I./v3.0/protocol/zigbee/app/framework \
  -I./v3.0/protocol/zigbee/app/framework/../.. \
  -I./v3.0/protocol/zigbee/app/framework/../../stack \
  -I./v3.0/protocol/zigbee/app/framework/../util \
  -I./v3.0/protocol/zigbee/app/framework/../util/common \
  -I./v3.0/protocol/zigbee/app/framework/../util/ezsp \
  -I./v3.0/protocol/zigbee/app/framework/../util/serial \
  -I./v3.0/protocol/zigbee/app/framework/../util/zigbee-framework \
  -I./v3.0/protocol/zigbee/app/framework/cli \
  -I./v3.0/protocol/zigbee/app/framework/include \
  -I./v3.0/protocol/zigbee/app/framework/security \
  -I./v3.0/protocol/zigbee/app/framework/util \
  -I./Z3GatewayHost \
  -I./v3.0/platform/base/hal \
  -I./v3.0/platform/base/hal/plugin \
  -I./v3.0/platform/base/hal/.. \
  -I./v3.0/platform/base/hal/micro/generic \
  -I./v3.0/platform/base/hal/micro/unix/host \
  -I./v3.0/platform/base/hal/../../../platform/common/inc/ \
  -I./v3.0/platform/base/hal/../../../platform/radio/mac/ \
  -I./v3.0/platform/base/hal/../../../util/silicon_labs/silabs_core/ \
  -I./v3.0/platform/base/hal/../../../util/silicon_labs/silabs_core/buffer_manager \
  -I./v3.0/platform/base/hal/../../../util/silicon_labs/silabs_core/event_control \
  -I./v3.0/platform/base/hal/micro/unix/host/board \
  -I./v3.0/util/silicon_labs/silabs_core \
  -I./v3.0/util/plugin/plugin-common/mbedtls \
  -I./v3.0/util/third_party/mbedtls \
  -I./v3.0/util/third_party/mbedtls/include \
  -I./v3.0/util/third_party/mbedtls/include/mbedtls \
  -I./v3.0/util/third_party/mbedtls/sl_crypto/include \
  -I./app \
 \

APP_BUILDER_OUTPUT_DIRECTORY=.
APP_BUILDER_CONFIG_HEADER=$(APP_BUILDER_OUTPUT_DIRECTORY)/Z3GatewayHost.h
APP_BUILDER_STORAGE_FILE=$(APP_BUILDER_OUTPUT_DIRECTORY)/Z3GatewayHost_endpoint_config.h

PLATFORM_HEADER_FILE ?= \"./v3.0/platform/base/hal/micro/unix/compiler/gcc.h\"

DEFINES = \
  $(COMPILER_DEFINES) \
  -DUNIX \
  -DUNIX_HOST \
  -DPHY_NULL \
  -DCONFIGURATION_HEADER=\"./v3.0/protocol/zigbee/app/framework/util/config.h\" \
  -DEZSP_HOST \
  -DGATEWAY_APP \
  -DZA_GENERATED_HEADER=\"$(APP_BUILDER_CONFIG_HEADER)\" \
  -DATTRIBUTE_STORAGE_CONFIGURATION=\"$(APP_BUILDER_STORAGE_FILE)\" \
  -DPLATFORM_HEADER=$(PLATFORM_HEADER_FILE) \
    -DBOARD_HOST \
  -DBOARD_HEADER=\"Z3GatewayHost_board.h\" \
  -DEM_AF_TEST_HARNESS_CODE \
  -DEM_AF_LINK_M \
  -DEM_AF_LINK_PTHREAD \
  -DEMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\" \
  -DEMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\" \
  -DEMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\" \
  -DEMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\" \
  -DEMBER_AF_API_NEIGHBOR_HEADER=\"stack/include/stack-info.h\" \
  -DEMBER_STACK_ZIGBEE \
  -DEZSP_ASH \
  -DMBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\" \
  -DAPPLICATION_TOKEN_HEADER=\"znet-token.h\" \
  -DAPPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\" \



COMPILER_FLAGS ?= \
  -Wall \
  -ggdb \
  -O0   \
  -std=$(STD)

APPLICATION_FILES= \
  app/apro-cli.c \
  app/apro-config.c \
  app/apro-handle.c \
  app/apro-zcl-cmd.c \
  app/apro-zcl-basic.c \
  app/apro-zcl-onoff.c \
  app/apro-zcl-switch.c \
  app/apro-zcl-level.c \
  app/apro-zcl-temp.c \
  app/apro-zcl-humid.c \
  app/apro-zcl-iaszone.c \
  app/apro-log.c \
  app/apro-event.c \
  app/apro-state.c \
  app/apro-node.c \
  app/apro-proc.c \
  app/apro-ocf-parser.c \
  app/apro-ipc.c \
  app/apro-ipc-parser.c \
  app/apro-ipc-payload.c \
  app/apro-test.c \
  ./znet-bookkeeping.c \
  ./call-command-handler.c \
  ./callback-stub.c \
  ./stack-handler-stub.c \
  ./znet-cli.c \
  ./Z3GatewayHost_callbacks.c \
  v3.0/protocol/zigbee/app/framework/../util/common/library.c \
  v3.0/protocol/zigbee/app/framework/../util/serial/command-interpreter2.c \
  v3.0/protocol/zigbee/app/framework/../util/zigbee-framework/zigbee-device-common.c \
  v3.0/protocol/zigbee/app/framework/../util/zigbee-framework/zigbee-device-host.c \
  v3.0/protocol/zigbee/app/framework/../../../../util/silicon_labs/silabs_core/event_control/event-control.c \
  v3.0/platform/base/hal/micro/generic/led-stub.c \
  v3.0/platform/base/hal/micro/generic/mem-util.c \
  v3.0/platform/base/hal/plugin/antenna-stub/antenna-stub.c \
  v3.0/platform/base/hal/plugin/buzzer-stub/buzzer-stub.c \
  v3.0/protocol/zigbee/app/framework/plugin/address-table/address-table.c \
  v3.0/protocol/zigbee/app/framework/plugin/address-table/address-table-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/basic/basic.c \
  v3.0/protocol/zigbee/app/framework/plugin/color-control-server/color-control-server.c \
  v3.0/protocol/zigbee/app/framework/plugin/concentrator/concentrator-support.c \
  v3.0/protocol/zigbee/app/framework/plugin/concentrator/concentrator-support-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/counters/counters-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/counters/counters-ota-host.c \
  v3.0/protocol/zigbee/app/framework/plugin/counters/counters-host.c \
  v3.0/protocol/zigbee/app/framework/plugin/ezmode-commissioning/ez-mode.c \
  v3.0/protocol/zigbee/app/framework/plugin/ezmode-commissioning/ez-mode-cli.c \
  v3.0/protocol/zigbee/app/util/ezsp/ezsp-callbacks.c \
  v3.0/protocol/zigbee/app/util/ezsp/ezsp-enum-decode.c \
  v3.0/protocol/zigbee/app/util/ezsp/ezsp-frame-utilities.c \
  v3.0/protocol/zigbee/app/util/ezsp/ezsp.c \
  v3.0/protocol/zigbee/app/ezsp-host/ezsp-host-io.c \
  v3.0/protocol/zigbee/app/ezsp-host/ezsp-host-queues.c \
  v3.0/protocol/zigbee/app/ezsp-host/ezsp-host-ui.c \
  v3.0/protocol/zigbee/app/util/ezsp/serial-interface-uart.c \
  v3.0/protocol/zigbee/app/ezsp-host/ash/ash-host-ui.c \
  v3.0/protocol/zigbee/app/ezsp-host/ash/ash-host.c \
  v3.0/platform/base/hal/micro/generic/ash-common.c \
  v3.0/protocol/zigbee/app/framework/plugin-host/file-descriptor-dispatch/file-descriptor-dispatch.c \
  v3.0/protocol/zigbee/app/framework/plugin-host/gateway/gateway-support.c \
  v3.0/protocol/zigbee/app/framework/plugin-host/gateway/backchannel-support.c \
  v3.0/protocol/zigbee/app/framework/plugin-host/gateway/gateway-support-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/green-power-client/green-power-client.c \
  v3.0/protocol/zigbee/app/framework/plugin/green-power-client/green-power-client-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/green-power-common/green-power-common.c \
  v3.0/protocol/zigbee/stack/gp/gp-util.c \
  v3.0/protocol/zigbee/app/framework/plugin/heartbeat/heartbeat.c \
  v3.0/protocol/zigbee/app/framework/plugin/ias-zone-client/ias-zone-client.c \
  v3.0/protocol/zigbee/app/framework/plugin/ias-zone-client/ias-zone-client-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/identify/identify.c \
  v3.0/protocol/zigbee/app/framework/plugin/identify/identify-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/identify-feedback/identify-feedback.c \
  v3.0/protocol/zigbee/app/framework/plugin/level-control/level-control.c \
  v3.0/util/plugin/plugin-common/linked-list/linked-list.c \
  v3.0/protocol/zigbee/app/framework/plugin/manufacturing-library-cli/manufacturing-library-cli-host.c \
  v3.0/util/third_party/mbedtls/library/aes.c \
  v3.0/util/third_party/mbedtls/library/aesni.c \
  v3.0/util/third_party/mbedtls/library/arc4.c \
  v3.0/util/third_party/mbedtls/library/aria.c \
  v3.0/util/third_party/mbedtls/library/asn1parse.c \
  v3.0/util/third_party/mbedtls/library/asn1write.c \
  v3.0/util/third_party/mbedtls/library/base64.c \
  v3.0/util/third_party/mbedtls/library/bignum.c \
  v3.0/util/third_party/mbedtls/library/blowfish.c \
  v3.0/util/third_party/mbedtls/library/camellia.c \
  v3.0/util/third_party/mbedtls/library/ccm.c \
  v3.0/util/third_party/mbedtls/library/certs.c \
  v3.0/util/third_party/mbedtls/library/chacha20.c \
  v3.0/util/third_party/mbedtls/library/chachapoly.c \
  v3.0/util/third_party/mbedtls/library/cipher.c \
  v3.0/util/third_party/mbedtls/library/cipher_wrap.c \
  v3.0/util/third_party/mbedtls/library/cmac.c \
  v3.0/util/third_party/mbedtls/library/ctr_drbg.c \
  v3.0/util/third_party/mbedtls/library/debug.c \
  v3.0/util/third_party/mbedtls/library/des.c \
  v3.0/util/third_party/mbedtls/library/dhm.c \
  v3.0/util/third_party/mbedtls/library/ecdh.c \
  v3.0/util/third_party/mbedtls/library/ecdsa.c \
  v3.0/util/third_party/mbedtls/library/ecjpake.c \
  v3.0/util/third_party/mbedtls/library/ecp.c \
  v3.0/util/third_party/mbedtls/library/ecp_curves.c \
  v3.0/util/third_party/mbedtls/library/entropy.c \
  v3.0/util/third_party/mbedtls/library/entropy_poll.c \
  v3.0/util/third_party/mbedtls/library/error.c \
  v3.0/util/third_party/mbedtls/library/gcm.c \
  v3.0/util/third_party/mbedtls/library/havege.c \
  v3.0/util/third_party/mbedtls/library/hkdf.c \
  v3.0/util/third_party/mbedtls/library/hmac_drbg.c \
  v3.0/util/third_party/mbedtls/library/md.c \
  v3.0/util/third_party/mbedtls/library/md2.c \
  v3.0/util/third_party/mbedtls/library/md4.c \
  v3.0/util/third_party/mbedtls/library/md5.c \
  v3.0/util/third_party/mbedtls/library/md_wrap.c \
  v3.0/util/third_party/mbedtls/library/memory_buffer_alloc.c \
  v3.0/util/third_party/mbedtls/library/net_sockets.c \
  v3.0/util/third_party/mbedtls/library/nist_kw.c \
  v3.0/util/third_party/mbedtls/library/oid.c \
  v3.0/util/third_party/mbedtls/library/padlock.c \
  v3.0/util/third_party/mbedtls/library/pem.c \
  v3.0/util/third_party/mbedtls/library/pk.c \
  v3.0/util/third_party/mbedtls/library/pk_wrap.c \
  v3.0/util/third_party/mbedtls/library/pkcs11.c \
  v3.0/util/third_party/mbedtls/library/pkcs12.c \
  v3.0/util/third_party/mbedtls/library/pkcs5.c \
  v3.0/util/third_party/mbedtls/library/pkparse.c \
  v3.0/util/third_party/mbedtls/library/pkwrite.c \
  v3.0/util/third_party/mbedtls/library/platform_util.c \
  v3.0/util/third_party/mbedtls/library/poly1305.c \
  v3.0/util/third_party/mbedtls/library/ripemd160.c \
  v3.0/util/third_party/mbedtls/library/rsa.c \
  v3.0/util/third_party/mbedtls/library/rsa_internal.c \
  v3.0/util/third_party/mbedtls/library/sha1.c \
  v3.0/util/third_party/mbedtls/library/sha256.c \
  v3.0/util/third_party/mbedtls/library/sha512.c \
  v3.0/util/third_party/mbedtls/library/ssl_cache.c \
  v3.0/util/third_party/mbedtls/library/ssl_ciphersuites.c \
  v3.0/util/third_party/mbedtls/library/ssl_cli.c \
  v3.0/util/third_party/mbedtls/library/ssl_cookie.c \
  v3.0/util/third_party/mbedtls/library/ssl_srv.c \
  v3.0/util/third_party/mbedtls/library/ssl_ticket.c \
  v3.0/util/third_party/mbedtls/library/ssl_tls.c \
  v3.0/util/third_party/mbedtls/library/threading.c \
  v3.0/util/third_party/mbedtls/library/timing.c \
  v3.0/util/third_party/mbedtls/library/version.c \
  v3.0/util/third_party/mbedtls/library/version_features.c \
  v3.0/util/third_party/mbedtls/library/x509.c \
  v3.0/util/third_party/mbedtls/library/x509_create.c \
  v3.0/util/third_party/mbedtls/library/x509_crl.c \
  v3.0/util/third_party/mbedtls/library/x509_crt.c \
  v3.0/util/third_party/mbedtls/library/x509_csr.c \
  v3.0/util/third_party/mbedtls/library/x509write_crt.c \
  v3.0/util/third_party/mbedtls/library/x509write_csr.c \
  v3.0/util/third_party/mbedtls/library/xtea.c \
  v3.0/protocol/zigbee/app/framework/plugin-host/ncp-configuration/ncp-configuration.c \
  v3.0/protocol/zigbee/app/framework/plugin/network-creator/network-creator.c \
  v3.0/protocol/zigbee/app/framework/plugin/network-creator/network-creator-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/network-creator-security/network-creator-security.c \
  v3.0/protocol/zigbee/app/framework/plugin/network-creator-security/network-creator-security-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/network-steering/network-steering.c \
  v3.0/protocol/zigbee/app/framework/plugin/network-steering/network-steering-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/network-steering/network-steering-v2.c \
  v3.0/protocol/zigbee/app/framework/plugin/network-steering/network-steering-host.c \
  v3.0/protocol/zigbee/app/framework/plugin/on-off/on-off.c \
  v3.0/protocol/zigbee/app/framework/plugin/ota-common/ota-common.c \
  v3.0/protocol/zigbee/app/framework/plugin/ota-server/ota-server.c \
  v3.0/protocol/zigbee/app/framework/plugin/ota-server/ota-server-page-request.c \
  v3.0/protocol/zigbee/app/framework/plugin/ota-server/ota-server-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/ota-server/ota-server-dynamic-block-period.c \
  v3.0/protocol/zigbee/app/framework/plugin/ota-server-policy/ota-server-policy.c \
  v3.0/protocol/zigbee/app/framework/plugin/ota-storage-common/ota-storage-common.c \
  v3.0/protocol/zigbee/app/framework/plugin/ota-storage-common/ota-storage-common-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/ota-storage-posix-filesystem/ota-storage-linux.c \
  v3.0/protocol/zigbee/app/framework/plugin/poll-control-client/poll-control-client.c \
  v3.0/protocol/zigbee/app/framework/plugin/poll-control-client/poll-control-client-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/reporting/reporting.c \
  v3.0/protocol/zigbee/app/framework/plugin/reporting/reporting-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/reporting/reporting-default-configuration.c \
  v3.0/protocol/zigbee/app/framework/plugin/scan-dispatch/scan-dispatch.c \
  v3.0/protocol/zigbee/app/util/ezsp/secure-ezsp-stub.c \
  v3.0/protocol/zigbee/app/framework/plugin/simple-main/simple-main.c \
  v3.0/protocol/zigbee/app/framework/plugin/simple-metering-client/simple-metering-client.c \
  v3.0/protocol/zigbee/app/framework/plugin/simple-metering-client/simple-metering-client-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/stack-diagnostics/stack-diagnostics.c \
  v3.0/protocol/zigbee/app/framework/plugin/test-harness/test-harness.c \
  v3.0/protocol/zigbee/app/framework/plugin/test-harness/read-write-attributes.c \
  v3.0/protocol/zigbee/app/framework/plugin/test-harness/test-harness-host.c \
  v3.0/protocol/zigbee/app/framework/plugin/time-server/time-server.c \
  v3.0/protocol/zigbee/app/framework/plugin/trust-center-nwk-key-update-broadcast/trust-center-nwk-key-update-broadcast.c \
  v3.0/protocol/zigbee/app/framework/plugin/trust-center-nwk-key-update-periodic/trust-center-nwk-key-update-periodic.c \
  v3.0/protocol/zigbee/app/framework/plugin/trust-center-nwk-key-update-unicast/trust-center-nwk-key-update-unicast.c \
  v3.0/platform/base/hal/micro/generic/crc.c \
  v3.0/platform/base/hal/micro/generic/endian.c \
  v3.0/platform/base/hal/micro/generic/random.c \
  v3.0/platform/base/hal/micro/generic/system-timer.c \
  v3.0/platform/base/hal/micro/unix/host/micro.c \
  v3.0/platform/base/hal/micro/unix/host/token-def-unix.c \
  v3.0/platform/base/hal/micro/unix/host/token.c \
  v3.0/platform/base/hal/plugin/serial/ember-printf-convert.c \
  v3.0/protocol/zigbee/app/util/serial/linux-serial.c \
  v3.0/protocol/zigbee/app/framework/plugin/update-tc-link-key/update-tc-link-key.c \
  v3.0/protocol/zigbee/app/framework/plugin/update-tc-link-key/update-tc-link-key-cli.c \
  v3.0/protocol/zigbee/app/framework/plugin/xmodem-sender/xmodem-sender.c \
  v3.0/protocol/zigbee/app/framework/cli/core-cli.c \
  v3.0/protocol/zigbee/app/framework/cli/network-cli.c \
  v3.0/protocol/zigbee/app/framework/cli/option-cli.c \
  v3.0/protocol/zigbee/app/framework/cli/plugin-cli.c \
  v3.0/protocol/zigbee/app/framework/cli/security-cli.c \
  v3.0/protocol/zigbee/app/framework/cli/zcl-cli.c \
  v3.0/protocol/zigbee/app/framework/cli/zdo-cli.c \
  v3.0/protocol/zigbee/app/framework/security/af-node.c \
  v3.0/protocol/zigbee/app/framework/security/af-security-common.c \
  v3.0/protocol/zigbee/app/framework/security/af-trust-center.c \
  v3.0/protocol/zigbee/app/framework/security/crypto-state.c \
  v3.0/protocol/zigbee/app/framework/util/af-event.c \
  v3.0/protocol/zigbee/app/framework/util/af-main-common.c \
  v3.0/protocol/zigbee/app/framework/util/attribute-size.c \
  v3.0/protocol/zigbee/app/framework/util/attribute-storage.c \
  v3.0/protocol/zigbee/app/framework/util/attribute-table.c \
  v3.0/protocol/zigbee/app/framework/util/client-api.c \
  v3.0/protocol/zigbee/app/framework/util/message.c \
  v3.0/protocol/zigbee/app/framework/util/multi-network.c \
  v3.0/protocol/zigbee/app/framework/util/print.c \
  v3.0/protocol/zigbee/app/framework/util/print-formatter.c \
  v3.0/protocol/zigbee/app/framework/util/process-cluster-message.c \
  v3.0/protocol/zigbee/app/framework/util/process-global-message.c \
  v3.0/protocol/zigbee/app/framework/util/service-discovery-common.c \
  v3.0/protocol/zigbee/app/framework/util/time-util.c \
  v3.0/protocol/zigbee/app/framework/util/util.c \
  v3.0/protocol/zigbee/app/framework/util/af-main-host.c \
  v3.0/protocol/zigbee/app/framework/util/service-discovery-host.c \

# wichoi 20201118 C++ wrap
APPLICATION_FILES_CPP= ./app/apro-ocf.cpp

APPLICATION_FILES:=$(call removeSpaces, $(APPLICATION_FILES))

APPLICATION_FILES_CPP:=$(call removeSpaces, $(APPLICATION_FILES_CPP))

LIBRARIES = \
 \


OUTPUT_DIR=$(APP_BUILDER_OUTPUT_DIRECTORY)/build
OUTPUT_DIR_CREATED= $(OUTPUT_DIR)/created
EXE_DIR=$(OUTPUT_DIR)/exe
# Build a list of object files from the source file list, but all objects
# live in the $(OUTPUT_DIR) above.  The list of object files
# created assumes that the file part of the filepath is unique
# (i.e. the bar.c of foo/bar.c is unique across all sub-directories included).
APPLICATION_OBJECTS= $(addprefix $(OUTPUT_DIR)/, $(notdir $(APPLICATION_FILES:.c=.o))) \
                     $(addprefix $(OUTPUT_DIR)/, $(notdir $(APPLICATION_FILES_CPP:.cpp=.o))) 
# wichoi 20201118 C++ wrap

ifdef GENERATE_LIBRARY
TARGET_FILE= $(EXE_DIR)/Z3GatewayHost$(ARCHIVE_EXTENSION)
else
TARGET_FILE= $(EXE_DIR)/Z3GatewayHost
endif

# -MMD and -MF generates Makefile dependencies while at the same time compiling.
# -MP notes to add a dummy 'build' rule for each header file.  This 
# prevent a problem where a removed header file will generate an error because a
# dependency references it but it can't be found anymore.
DEPENDENCY_FLAGS ?= -MMD -MP -MF $(@D)/$(@F:.o=.d)

# Dependency post process is a way to massage generated dependencies.
# This is necessary for example when using Make under Cygwin but compiling
# using a native Windows compiler that generates native Windows paths
# that Cygwin will choke on.  Or if compiling on Linux using Wine to run a 
# Windows compiler, a similar problem can occur.  
DEPENDENCY_POST_PROCESS ?=

CPPFLAGS= $(INCLUDES) $(DEFINES) $(COMPILER_FLAGS) $(DEPENDENCY_FLAGS)
LINKER_FLAGS ?=

LINKER_FLAGS += -lstdc++ # wichoi 20201118 c++ linker
CPPFLAGS += -DFSP_PLATFORM_LINUX # wichoi 20201118 add define FSP_PLATFORM_LINUX 

#ifdef NO_READLINE
  CPPFLAGS += -DNO_READLINE
#else
#  LINKER_FLAGS +=  \
#    -lreadline \
#    -lncurses 
#endif

# Conditionally include the math library if EM_AF_LINK_M is defined.
ifeq ($(findstring -DEM_AF_LINK_M,$(DEFINES)),-DEM_AF_LINK_M)
  LINKER_FLAGS += \
    -lm
endif

# Conditionally include the POSIX threads library if EM_AF_LINK_PTHREAD is
# defined.
ifeq ($(findstring -DEM_AF_LINK_PTHREAD,$(DEFINES)),-DEM_AF_LINK_PTHREAD)
  LINKER_FLAGS += \
    -lpthread
endif

ARCHIVE_FLAGS ?= rus

# Rules

.PHONY: all
all: $(TARGET_FILE)

ifneq ($(MAKECMDGOALS),clean)
-include $(APPLICATION_OBJECTS:.o=.d)
endif

ifdef GENERATE_LIBRARY
$(TARGET_FILE): $(APPLICATION_OBJECTS) $(LIBRARIES)
	$(ARCHIVE) $(ARCHIVE_FLAGS) $(TARGET_FILE) $^
	@echo -e '\n$@ build success'
else
$(TARGET_FILE): $(APPLICATION_OBJECTS) $(LIBRARIES)
	$(LD) $^ $(LINKER_FLAGS) -o $(TARGET_FILE)
	@echo -e '\n$@ build success'
endif

.PHONY: clean
clean:
	rm -rf $(OUTPUT_DIR)
#	rm -rf Z3GatewayHost

romfs:
	$(STRIP) $(TARGET_FILE)
	cp -vf $(TARGET_FILE) ./../../../../../romfs/bin
#	$(ROMFSINST) /bin/Z3GatewayHost

$(OUTPUT_DIR_CREATED):
	mkdir -p $(OUTPUT_DIR)
	mkdir -p $(EXE_DIR)
	touch $(OUTPUT_DIR_CREATED)

# To facilitate generating all output files in a single output directory, we
# must create separate .o and .d rules for all the different sub-directories
# used by the source files.
# If additional directories are added that are not already in the
# $(APPLICATION_FILES) above, new rules will have to be created below.

# Object File rules

# NOTE:  We escape the commands in this rule because we don't want
# them to be interpreted when the function executes.  We don't escape
# the dependency rule itself (1st line) because we want this to be 
# explicit for each target.
define create-build-rules 
$(OUTPUT_DIR)/$(notdir $(1:%.c=%.o)): $(call restoreSpaces, $1) | $(OUTPUT_DIR_CREATED) 
	$$(CC) $$(CPPFLAGS) -c "$$<" -o $$@
	$$(DEPENDENCY_POST_PROCESS)
endef 

$(foreach d, $(APPLICATION_FILES), $(eval $(call create-build-rules,$d))) 

# wichoi 20201118 C++ wrap
define create-build-rules 
$(OUTPUT_DIR)/$(notdir $(1:%.cpp=%.o)): $(call restoreSpaces, $1) | $(OUTPUT_DIR_CREATED) 
	$$(CXX) $$(CPPFLAGS) -c "$$<" -o $$@
	$$(DEPENDENCY_POST_PROCESS)
endef 

$(foreach d, $(APPLICATION_FILES_CPP), $(eval $(call create-build-rules,$d)))  

# Dependency rules
# No explicit rules.  Dependencies are generated as part of the compile step.
